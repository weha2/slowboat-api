// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Package {
  id        Int       @id @default(autoincrement())
  name      String
  price     Float
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  booking   Booking[]
}

model Booking {
  id                Int           @id @default(autoincrement())
  packageId         Int
  package           Package       @relation(fields: [packageId], references: [id])
  quantity          Int
  price             Float
  additionalRequest String?
  status            PaymentStatus
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  contact           Contact[]
  participant       Participant[]
}

model Contact {
  id          Int      @id @default(autoincrement())
  bookingId   Int
  booking     Booking  @relation(fields: [bookingId], references: [id])
  name        String
  email       String
  phoneCode   String
  numberPhone String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Participant {
  id             Int      @id @default(autoincrement())
  bookingId      Int
  booking        Booking  @relation(fields: [bookingId], references: [id])
  name           String
  email          String
  phoneCode      String
  numberPhone    String
  dateOfbirth    DateTime
  passportNumber String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}
